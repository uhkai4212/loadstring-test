game:GetService("RunService").RenderStepped:Connect(function()
							debug.getupvalue(closure, upvalueIndex)[elementIndex] = value
						end)
					end

					-- Generated by Hydroxide's Upvalue Scanner: https://github.com/Upbolt/Hydroxide

					local aux = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ohaux.lua"))()

					local Tool = game:GetService("Players").LocalPlayer.Character:FindFirstChild("rageblade")
					if Tool then
						local scriptPath = Tool:FindFirstChild("rageblade") -- Hier ist der error von Gestern.
						local closureName = "Unnamed function"
						local upvalueIndex = 1
						local closureConstants = {
							[1] = "isHitting",
							[2] = "getLivingEntityFromChildPart",
							[3] = "attemptHit"
						}

						local closure = aux.searchClosure(scriptPath, closureName, upvalueIndex, closureConstants)
						local value = 4
						local elementIndex = "speed"


						debug.getupvalue(closure, upvalueIndex)[elementIndex] = value
					end

				end

				if _G.ragebladeMobFarm == true then
					DebugCheck(0,"ragebladeMobFarm2")
					if CHILDEN[i]:FindFirstChild("HumanoidRootPart") then
						if (CHILDEN[i]:FindFirstChild("HumanoidRootPart").Position - game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude < 30 then
							if CANUSEAUTOCLICKER == true then
								game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
								task.wait()
								game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
							end

							local ohString1 = Hash()
							local ohTable2 = {
								[1] = {
									[MotHitH1] = MotHitH2,
									["hitUnit"] = CHILDEN[i]
								}
							}


							local SelectedMob = CHILDEN[i]
							if 	CHILDEN[i]:FindFirstChild("HumanoidRootPart") then

								game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild(RemoteData:FindFirstChild("KillRemote").Value):FireServer(ohString1, ohString2)

							else
								-- warn("No HumanoidRootPart")
							end
						end
					else
						if CANUSEAUTOCLICKER == true then
							game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
							task.wait()
							game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
						end
						local SelectedMob = CHILDEN[i]
						if 	CHILDEN[i]:FindFirstChild("HumanoidRootPart") then
							--[[
							if SelectedMob:FindFirstChild("Humanoid") then
								SelectedMob:FindFirstChild("Humanoid"):Destroy()
							end
							]]
							--SelectedMob:FindFirstChild("HumanoidRootPart").Size = Vector3.new(8,YVALUE+4,8)
							--SelectedMob:FindFirstChild("HumanoidRootPart").CanCollide = false
						end

					end
				else
					if CHILDEN[i]:FindFirstChild("HumanoidRootPart") then
						if (CHILDEN[i]:FindFirstChild("HumanoidRootPart").Position - game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude < 30 then
							if CANUSEAUTOCLICKER == true then
								game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
								task.wait()
								game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
							end
							local SelectedMob = CHILDEN[i]
							if 	CHILDEN[i]:FindFirstChild("HumanoidRootPart") then
								--SelectedMob:FindFirstChild("HumanoidRootPart").Size = Vector3.new(8,YVALUE+4,8)
								--SelectedMob:FindFirstChild("HumanoidRootPart").CanCollide = false
							end
						end
					else
						if CANUSEAUTOCLICKER == true then
							game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
							task.wait()
							game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
						end
						local SelectedMob = CHILDEN[i]
						if 	CHILDEN[i]:FindFirstChild("HumanoidRootPart") then
							--[[
							if SelectedMob:FindFirstChild("Humanoid") then
								SelectedMob:FindFirstChild("Humanoid"):Destroy()
							end
							]]
							--SelectedMob:FindFirstChild("HumanoidRootPart").Size = Vector3.new(8,YVALUE+4,8)
							--SelectedMob:FindFirstChild("HumanoidRootPart").CanCollide = false
						end

					end
				end
			end
		end
		task.wait(0.5)
		KILLAURA_COOLDOWN = false
	end
end

function NKillAura()
	if KILLAURA_COOLDOWN == false then
		KILLAURA_COOLDOWN = true
		local function findNearestPart(A)
			local closestPart = nil
			local closestDistance = math.huge
			local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

			local Table = A

			for i, part in ipairs(Table) do
				local distance = (part:FindFirstChild("HumanoidRootPart").Position - playerPosition).magnitude
				if distance < closestDistance then
					closestPart = part
					closestDistance = distance
				end
			end

			DebugCheck(0,"findNearestPart")

			return closestPart
		end


		local Mobs = {}
		for i,v in pairs(workspace.WildernessIsland.Entities:GetChildren()) do
			if v and v:FindFirstChild("HumanoidRootPart") then
				table.insert(Mobs, v) 
			end
		end

		local NM = findNearestPart(Mobs)

		DebugCheck(0,NM.Name)

		-- game.Players.LocalPlayer.Character:MoveTo(NM:FindFirstChild("HumanoidRootPart").Position)

		for i = 1,50 do
			if NM then

				local ohString1 = Hash()
				local ohTable2 = {
					[1] = {
						[MotHitH1] = MotHitH2,
						["hitUnit"] = NM
					}
				}


				game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild(RemoteData:FindFirstChild("KillRemote").Value):FireServer(ohString1, ohTable2)

				wait()
			end
		end
		task.wait(0.5)
		KILLAURA_COOLDOWN = false
	end
end

local KILLAURA_COOLDOWN = false
local BypassedSowrd = false
local ANTICONSOLEWARNLOGANIMATION2 = false
function KillAura()
	if KILLAURA_COOLDOWN == false then
		KILLAURA_COOLDOWN = true

		if BypassedSowrd == false then
			if _G.ragebladeMobFarm == true then
				DebugCheck(0,"ragebladeMobFarm")
				local aux = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Upbolt/Hydroxide/revision/ohaux.lua"))()

				local Tool = game:GetService("Players").LocalPlayer.Character:FindFirstChild("rageblade")
				if Tool then
					local scriptPath = Tool:FindFirstChild("rageblade") -- Hier ist der error von Gestern.
					local closureName = "Unnamed function"
					local upvalueIndex = 1
					local closureConstants = {
						[1] = "isHitting",
						[2] = "getLivingEntityFromChildPart",
						[3] = "attemptHit"
					}

					local closure = aux.searchClosure(scriptPath, closureName, upvalueIndex, closureConstants)
					local value = 0
					local elementIndex = "lastClicked"